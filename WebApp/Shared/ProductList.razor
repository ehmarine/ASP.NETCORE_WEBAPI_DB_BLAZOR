<div class="container mt-5">
    <div class="col-12 ">
        <div class="list-group">

            @if (products == null)
            {
            <div class="d-flex justify-content-center align-items-center">
                <div>
                    <div class="spinner-grow" style="width: 2rem; height: 2rem; margin: 2rem;" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow" style="width: 2rem; height: 2rem; margin: 2rem;" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow" style="width: 2rem; height: 2rem; margin: 2rem;" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
             </div>
             <h4 class="text-center text-italic">Loading...</h4>
           
            }
            else
            {@foreach (var product in products)
                {
                    <div class="container d-flex">
                     <ProductItem Item="@product" />
                    </div>
                }
            }


        </div>
    </div>
</div>

@code {
    private Product[] products;


    private async Task GetProductsAsync()
    {
        products = await Http.GetFromJsonAsync<Product[]>("https://localhost:44345/api/products");
        Console.WriteLine(products);

    }

    protected override void OnInitialized()
    {
        var timer = new Timer(new TimerCallback(_ => InvokeAsync(() => StateHasChanged())), null, 1000, 1000);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await GetProductsAsync();
    }

}
 