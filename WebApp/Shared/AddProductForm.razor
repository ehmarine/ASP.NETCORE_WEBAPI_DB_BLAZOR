<h3>Add New Product:</h3>

<EditForm Model="@product" OnValidSubmit="@HandleValidSubmit">

    <div class="mb-3">
        <label for="name" class="form-label">Product Name</label>
        <InputText id="name" class="form-control" @bind-Value="product.ProductName" DisplayName="Product Name" />
    </div>

    <div class="mb-3">
        <label for="shortdesc" class="form-label">Short Description</label>
        <InputTextArea id="shortdesc" class="form-control" @bind-Value="product.ShortDescription" />
    </div>

    <div class="mb-3">
        <label for="longdesc" class="form-label">Long Description</label>
        <InputTextArea id="longdesc" class="form-control" @bind-Value="product.LongDescription" />
    </div>
    <div class="mb-3">
        <label for="image" class="form-label">Image URL</label>
        <InputTextArea id="image" class="form-control" @bind-Value="product.ImgUrl" />
    </div>
    <div class="mb-3">
        <label for="price" class="form-label">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="product.Price" />
    </div>

    <div class="mb-3">
        <label for="productcategory" class="form-label">Product category</label>

        @if (categories == null)
        {
            <p>Loading..</p>
        }
        else
        {
        <InputSelect id="category" @bind-Value="product.CategoryId">
            @foreach (var item in categories)
                {
                <option value=@item.Id>@item.CategoryName.ToString()</option>
                }
        </InputSelect>
        }
    </div>

    <div class="mb-5">
        <button class="btn btn-secondary" type="submit">Add Product</button>
    </div>
</EditForm>


@code {
    private Product product = new();


    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("https://localhost:44345/api/products", product);
        product = new();

        StateHasChanged();
    }



    private Category[] categories;

    private async Task GetCategoriesAsync()
    {
        categories = await Http.GetFromJsonAsync<Category[]>("https://localhost:44345/api/categories");
        StateHasChanged();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await GetCategoriesAsync();
    }
}
